!function(){describe("QueryHandler",function(){"use strict";var e;beforeEach(function(){e=jasmine.createSpyObj("options",["match","unmatch","setup","destroy"])}),it("is initialised if setup not deferred",function(){var t=new QueryHandler(e);expect(t.initialised).toBe(!0)}),it("is not initialised if setup deferred",function(){e.deferSetup=!0;var t=new QueryHandler(e);expect(t.initialised).toBeFalsy()}),it("stores supplied handler",function(){var t=new QueryHandler(e);expect(t.options).toBe(e)}),it("calls setup handler and sets to initialised during setup",function(){e.deferSetup=!0;var t=new QueryHandler(e);t.setup(),expect(e.setup).toHaveBeenCalled(),expect(t.initialised).toBe(!0)}),it("will call a setup function followed by on",function(){var t;e.deferSetup=!0,t=new QueryHandler(e),t.on(),expect(e.setup).toHaveBeenCalled(),expect(e.match).toHaveBeenCalled()}),it("calls match handler when turned on",function(){var t=new QueryHandler(e);t.on(),expect(e.match).toHaveBeenCalled()}),it("calls unmatch handler when turned off",function(){var t=new QueryHandler(e);t.off(),expect(e.unmatch).toHaveBeenCalled()}),it("can test for equality",function(){var t,n,a=new QueryHandler(e);t=a.equals(e),n=a.equals(e.match),expect(t).toBe(!0),expect(n).toBe(!0)}),it("calls through to destroy if supplied",function(){var t=new QueryHandler(e);t.destroy(),expect(e.destroy).toHaveBeenCalled()}),it("calls through to unmatch if destroy not available",function(){var e=jasmine.createSpyObj("options",["match","unmatch"]),t=new QueryHandler(e);t.destroy(),expect(e.unmatch).toHaveBeenCalled()})})}();